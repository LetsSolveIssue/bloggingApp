{"ast":null,"code":"import _slicedToArray from \"/Users/sugoilabs/Documents/assignments/storyFinal/blogPostBackend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sugoilabs/Documents/assignments/storyFinal/blogPostBackend/client/src/components/Dashboard/post/posts.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { createPost } from '../../../utils/api';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton'; //import InputBase from '@material-ui/core/InputBase';\n//import Badge from '@material-ui/core/Badge';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TextField from '@material-ui/core/TextField';\nimport clsx from 'clsx';\nimport { getPosts, deletePost } from \"../../../utils/api\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst getUserId = () => localStorage.getItem('user_id');\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345\n  },\n  root: {\n    flexGrow: 1,\n    margin: '100px'\n  },\n  button: {\n    float: \"right\",\n    margin: \"40px\",\n    width: \"200px\",\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  margin: {\n    margin: '10px 0px 0px 0px'\n  },\n  withoutLabel: {\n    marginTop: '10px'\n  },\n  textField: {\n    width: 200\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200\n    }\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    }\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  }\n}));\nexport default function ImgMediaCard() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        anchorEl = _React$useState2[0],\n        setAnchorEl = _React$useState2[1];\n\n  const _React$useState3 = React.useState(null),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        mobileMoreAnchorEl = _React$useState4[0],\n        setMobileMoreAnchorEl = _React$useState4[1];\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = React.createElement(Menu, {\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    id: menuId,\n    keepMounted: true,\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: isMenuOpen,\n    onClose: handleMenuClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    onClick: handleMenuClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Profile\"), React.createElement(MenuItem, {\n    onClick: handleMenuClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"My account\"));\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = React.createElement(Menu, {\n    anchorEl: mobileMoreAnchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    id: mobileMenuId,\n    keepMounted: true,\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: isMobileMenuOpen,\n    onClose: handleMobileMenuClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    onClick: handleProfileMenuOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"account of current user\",\n    \"aria-controls\": \"primary-search-account-menu\",\n    \"aria-haspopup\": \"true\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(AccountCircle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Profile\"))); // const [openDialog, setOpenDialog] = React.useState(false);\n  // const theme = useTheme();\n  // const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  // const handleClickOpenDialog = () => {\n  //   setOpenDialog(true);\n  // };\n  // const handleCloseDialog = () => {\n  //   setOpenDialog(false);\n  // };\n  // return (\n  //   <div>\n  //     <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpenDialog}>\n  //       Open responsive dialog\n  //     </Button>\n  //     <Dialog\n  //       fullScreen={fullScreen}\n  //       open={open}\n  //       onClose={handleCloseDialog}\n  //       aria-labelledby=\"responsive-dialog-title\"\n  //     >\n  //       <DialogTitle id=\"responsive-dialog-title\">{\"Are you sure you want to delete?\"}</DialogTitle>\n  //       <DialogContent>\n  //         <DialogContentText>\n  //           Let Google help apps determine location. This means sending anonymous location data to\n  //           Google, even when no apps are running.\n  //         </DialogContentText>\n  //       </DialogContent>\n  //       <DialogActions>\n  //         <Button autoFocus onClick={handleCloseDialog} color=\"primary\">\n  //           Disagree\n  //         </Button>\n  //         <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n  //           Agree\n  //         </Button>\n  //       </DialogActions>\n  //     </Dialog>\n  //   </div>\n  // )\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        open = _React$useState6[0],\n        setOpen = _React$useState6[1];\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        copen = _React$useState8[0],\n        setcOpen = _React$useState8[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        postData = _useState2[0],\n        setPostData = _useState2[1];\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const createOpen = () => {\n    setcOpen(true);\n  };\n\n  const createClose = () => {\n    setcOpen(false);\n  };\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        description = _useState4[0],\n        setDescription = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        title = _useState6[0],\n        setTitle = _useState6[1];\n\n  useEffect(() => {\n    console.log(getPosts());\n    getPosts().then(data => {\n      if (!data.error) {\n        setPostData(data.posts);\n      }\n    });\n  }, []);\n  const posthistory = useHistory();\n\n  const deleteThePost = (userId, postId) => {\n    let personId = getUserId();\n\n    if (userId === personId) {\n      deletePost(postId).then(data => {\n        if (!data.error) {\n          setPostData(postData.filter(post => post._id !== postId));\n        } else {\n          console.log(\"Some error occured while deleting\");\n        }\n      });\n    } else {\n      return React.createElement(React.Fragment, null, React.createElement(Dialog, {\n        fullScreen: fullScreen,\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Use Google's location service?\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(Button, {\n        autoFocus: true,\n        onClick: handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"Disagree\"), React.createElement(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, \"Agree\"))));\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createPost({\n      title,\n      description\n    }).then(data => {\n      if (!data.error) {\n        createClose();\n        getPosts().then(data => {\n          setPostData(data.posts);\n          setDescription('');\n          setTitle('');\n        });\n        posthistory.push('/posts');\n      }\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: classes.grow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }, \"Story Digital Create Blogs\"), React.createElement(\"div\", {\n    className: classes.grow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.sectionDesktop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"account of current user\",\n    \"aria-controls\": menuId,\n    \"aria-haspopup\": \"true\",\n    onClick: handleProfileMenuOpen,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  }, React.createElement(AccountCircle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.sectionMobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"show more\",\n    \"aria-controls\": mobileMenuId,\n    \"aria-haspopup\": \"true\",\n    onClick: handleMobileMenuOpen,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }, React.createElement(MoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }))))), renderMobileMenu, renderMenu), React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 20,\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: createOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }, \"Create a new post\")), React.createElement(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: copen,\n    onClose: createClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445\n    },\n    __self: this\n  }, React.createElement(Fade, {\n    in: copen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => handleSubmit(e),\n    className: clsx(classes.margin, classes.withoutLabel, classes.textField),\n    Validate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: clsx(classes.margin, classes.textField),\n    id: \"outlined-textarea\",\n    label: \"Title\",\n    placeholder: \"Title\",\n    multiline: true,\n    variant: \"outlined\",\n    onChange: e => setTitle(e.target.value),\n    value: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: clsx(classes.margin, classes.textField),\n    id: \"outlined-textarea\",\n    label: \"Description\",\n    placeholder: \"Description\",\n    multiline: true,\n    variant: \"outlined\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: clsx(classes.margin, classes.textField),\n    type: \"submit\",\n    size: \"large\",\n    variant: \"contained\",\n    color: \"primary\",\n    disableElevation: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496\n    },\n    __self: this\n  }, \"Create Post\"))))), React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507\n    },\n    __self: this\n  }, postData.map(post => React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    key: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    component: \"img\",\n    alt: \"Contemplative Reptile\",\n    height: \"140\",\n    image: \"https://www.w3schools.com/howto/img_snow.jpg\",\n    title: \"Contemplative Reptile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522\n    },\n    __self: this\n  }, post.title), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525\n    },\n    __self: this\n  }, post.description))), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: () => deleteThePost(post.userId, post._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532\n    },\n    __self: this\n  }, \"Delete\"))), React.createElement(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540\n    },\n    __self: this\n  }, React.createElement(Fade, {\n    in: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    component: \"img\",\n    alt: \"Contemplative Reptile\",\n    height: \"140\",\n    image: \"https://www.w3schools.com/howto/img_forest.jpg\",\n    title: \"Contemplative Reptile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565\n    },\n    __self: this\n  }, post.title), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568\n    },\n    __self: this\n  }, post.description))))))))))));\n}","map":{"version":3,"sources":["/Users/sugoilabs/Documents/assignments/storyFinal/blogPostBackend/client/src/components/Dashboard/post/posts.js"],"names":["React","useState","useEffect","createPost","fade","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Grid","useHistory","Modal","Backdrop","Fade","AppBar","Toolbar","IconButton","MenuItem","Menu","MenuIcon","SearchIcon","AccountCircle","MailIcon","NotificationsIcon","MoreIcon","DeleteIcon","TextField","clsx","getPosts","deletePost","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","getUserId","localStorage","getItem","useStyles","theme","card","maxWidth","root","flexGrow","margin","button","float","width","alignItems","justifyContent","modal","display","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","withoutLabel","marginTop","textField","grow","menuButton","marginRight","title","breakpoints","up","search","position","borderRadius","shape","common","white","marginLeft","searchIcon","height","pointerEvents","inputRoot","color","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","ImgMediaCard","classes","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","fullScreen","down","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","handleMobileMenuOpen","menuId","renderMenu","vertical","horizontal","mobileMenuId","renderMobileMenu","open","setOpen","copen","setcOpen","postData","setPostData","handleOpen","handleClose","createOpen","createClose","description","setDescription","setTitle","console","log","then","data","error","posts","posthistory","deleteThePost","userId","postId","personId","filter","post","_id","handleSubmit","e","preventDefault","push","textAlign","timeout","target","value","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState,useEffect } from 'react'\nimport { createPost } from '../../../utils/api'\nimport {fade, makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\n//import InputBase from '@material-ui/core/InputBase';\n//import Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TextField from '@material-ui/core/TextField';\nimport clsx from 'clsx';\nimport { getPosts,deletePost } from \"../../../utils/api\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nconst getUserId = () => localStorage.getItem('user_id');\n\nconst useStyles = makeStyles (theme => ({\n  card: {\n    maxWidth: 345,\n  },\n  root: {\n    flexGrow: 1,\n    margin : '100px',\n   \n},\nbutton : {\n    float : \"right\",\n    margin : \"40px\",\n    width : \"200px\",\n    alignItems: 'center',\n  justifyContent: 'center',\n    \n},\nmodal: {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n},\npaper: {\n  backgroundColor: theme.palette.background.paper,\n  border: '2px solid #000',\n  boxShadow: theme.shadows[5],\n  padding: theme.spacing(2, 4, 3),\n},\nmargin: {\n  margin: '10px 0px 0px 0px',\n},\nwithoutLabel: {\n  marginTop: '10px',\n},\ntextField: {\n  width: 200,\n},\ngrow: {\n  flexGrow: 1,\n},\nmenuButton: {\n  marginRight: theme.spacing(2),\n},\ntitle: {\n  display: 'none',\n  [theme.breakpoints.up('sm')]: {\n    display: 'block',\n  },\n},\nsearch: {\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: fade(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: fade(theme.palette.common.white, 0.25),\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto',\n  },\n},\nsearchIcon: {\n  width: theme.spacing(7),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n},\ninputRoot: {\n  color: 'inherit',\n},\ninputInput: {\n  padding: theme.spacing(1, 1, 1, 7),\n  transition: theme.transitions.create('width'),\n  width: '100%',\n  [theme.breakpoints.up('md')]: {\n    width: 200,\n  },\n},\nsectionDesktop: {\n  display: 'none',\n  [theme.breakpoints.up('md')]: {\n    display: 'flex',\n  },\n},\nsectionMobile: {\n  display: 'flex',\n  [theme.breakpoints.up('md')]: {\n    display: 'none',\n  },\n},\n}));\n\nexport default function ImgMediaCard() {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n  // const [openDialog, setOpenDialog] = React.useState(false);\n  // const theme = useTheme();\n  // const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  // const handleClickOpenDialog = () => {\n  //   setOpenDialog(true);\n  // };\n\n  // const handleCloseDialog = () => {\n  //   setOpenDialog(false);\n  // };\n\n  // return (\n  //   <div>\n  //     <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpenDialog}>\n  //       Open responsive dialog\n  //     </Button>\n  //     <Dialog\n  //       fullScreen={fullScreen}\n  //       open={open}\n  //       onClose={handleCloseDialog}\n  //       aria-labelledby=\"responsive-dialog-title\"\n  //     >\n  //       <DialogTitle id=\"responsive-dialog-title\">{\"Are you sure you want to delete?\"}</DialogTitle>\n  //       <DialogContent>\n  //         <DialogContentText>\n  //           Let Google help apps determine location. This means sending anonymous location data to\n  //           Google, even when no apps are running.\n  //         </DialogContentText>\n  //       </DialogContent>\n  //       <DialogActions>\n  //         <Button autoFocus onClick={handleCloseDialog} color=\"primary\">\n  //           Disagree\n  //         </Button>\n  //         <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n  //           Agree\n  //         </Button>\n  //       </DialogActions>\n  //     </Dialog>\n  //   </div>\n  // )\n\n\n\n\n  const [open, setOpen] = React.useState(false);\n  const [copen, setcOpen] = React.useState(false);\n  const [postData, setPostData] = useState([])\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const createOpen = () => {\n    setcOpen(true);\n  };\n\n  const createClose = () => {\n    setcOpen(false);\n  };\n  \n\n  const [description, setDescription] = useState('')\n  const [title, setTitle] = useState('')\n  useEffect(() => {\n    console.log(getPosts())\n    getPosts().then(data => {\n      if(!data.error){\n        setPostData(data.posts);\n      }\n     \n    })\n   },[])\n  \n  const posthistory  = useHistory();\n  const deleteThePost = (userId,postId) =>{\n    let personId = getUserId();\n     if(userId === personId){\n     \n      deletePost(postId).then(data => {\n        if(!data.error){\n          setPostData(postData.filter(post => post._id !== postId))\n        }else{\n          console.log(\"Some error occured while deleting\");\n        }\n      })\n     }else{\n       return(\n         <>\n        <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n      </>\n       )\n     }\n    \n   \n  }\n  const handleSubmit = (e) =>{\n    e.preventDefault()\n    \n    createPost({ title, description }).then(data => {\n     if(!data.error){\n      createClose()\n      getPosts().then(data => {\n        setPostData(data.posts);\n        setDescription('');\n      setTitle('')\n       })\n      posthistory.push('/posts')\n     }\n     \n     })\n    }\nreturn (\n  <>\n<div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n          Story Digital Create Blogs\n          </Typography>\n          {/* <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div> */}\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton> */}\n            {/* <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n             {/* <Button size=\"small\" color=\"primary\" >\n              Delete\n             </Button> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n<div className={classes.root}> \n{/* <Button className = {classes.button} variant=\"contained\" color=\"primary\" onClick={e => navigateToCreatePost(e)}>\n  Create a new post\n</Button>      */}\n\n<Grid container spacing={20} style={{textAlign:'center'}}>\n<Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={createOpen}>\n  Create a new post\n</Button> \n</Grid>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={copen}\n        onClose={createClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={copen}>\n          <div className={classes.paper}>\n            {/* <h2 id=\"transition-modal-title\">Transition modal</h2>\n            <p id=\"transition-modal-description\">react-transition-group animates me.</p> */}\n\n            <form className=\"form\" onSubmit={e => handleSubmit(e)} className={clsx(classes.margin, classes.withoutLabel, classes.textField)} Validate autoComplete=\"off\">\n                    \n            <TextField\n            className={clsx(classes.margin, classes.textField)}\n          id=\"outlined-textarea\"\n          label=\"Title\"\n          placeholder=\"Title\"\n          multiline\n          variant=\"outlined\"\n          onChange={e => setTitle(e.target.value)}\n               value = {title}/>\n               \n            <TextField\n            className={clsx(classes.margin, classes.textField)}\n          id=\"outlined-textarea\"\n          label=\"Description\"\n          placeholder=\"Description\"\n          multiline\n          variant=\"outlined\"\n          value= {description}\n              onChange={e => setDescription(e.target.value)}/>\n\n                {/* <Button\n                className={clsx(classes.margin, classes.textField)}\n            variant=\"contained\"\n            component=\"label\"\n            size=\"large\"\n          >\n            Upload File\n            <input\n              type=\"file\"\n              style={{ display: \"none\" }}\n            />\n          </Button> */}\n<Button className={clsx(classes.margin, classes.textField)} type=\"submit\"  size=\"large\"  variant=\"contained\" color=\"primary\" disableElevation>\nCreate Post\n            </Button>\n           \n          </form>\n          </div>\n        </Fade>\n      </Modal>\n\n\n<Grid container spacing={1}>\n    <Grid container item xs={12} spacing={3}>\n      {\n        postData.map(post => (\n          <Grid item xs={12} sm={4} >\n\n     <Card className={classes.card} key={post._id} >\n            <CardActionArea onClick={handleOpen}>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          height=\"140\"\n          image=\"https://www.w3schools.com/howto/img_snow.jpg\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {post.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {post.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n       \n        <Button size=\"small\" color=\"primary\" onClick={() => deleteThePost(post.userId,post._id)}>\n          Delete\n        </Button>\n        \n      </CardActions>\n      </Card>\n       \n\n        <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            {/* <h2 id=\"transition-modal-title\">Transition modal</h2>\n            <p id=\"transition-modal-description\">react-transition-group animates me.</p> */}\n            <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          height=\"140\"\n          image=\"https://www.w3schools.com/howto/img_forest.jpg\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {post.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n           {post.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n            \n          </div>\n        </Fade>\n      </Modal>\n    \n      \n    \n   </Grid>\n\n        ))\n      }\n  \n    \n  \n</Grid>\n</Grid>\n</div>\n</>\n);\n}"]},"metadata":{},"sourceType":"module"}